{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import inject from \"@rollup/plugin-inject\";\nimport { createRequire } from \"node:module\";\nimport stdLibBrowser from \"node-stdlib-browser\";\nimport esbuildPlugin from \"node-stdlib-browser/helpers/esbuild/plugin\";\nimport { handleCircularDependancyWarning } from \"node-stdlib-browser/helpers/rollup/plugin\";\nimport type { Plugin } from \"vite\";\n\nexport type BuildTarget = \"build\" | \"dev\";\nexport type BooleanOrBuildTarget = boolean | BuildTarget;\nexport type ModuleName = keyof typeof stdLibBrowser;\nexport type ModuleNameWithoutNodePrefix<T = ModuleName> = T extends `node:${infer P}` ? P : never;\n\nexport type PolyfillOptions = {\n  /**\n   * @example\n   *\n   * ```ts\n   * nodePolyfills({\n   *   include: ['fs', 'path'],\n   * })\n   * ```\n   */\n  include?: ModuleNameWithoutNodePrefix[];\n  /**\n   * @example\n   *\n   * ```ts\n   * nodePolyfills({\n   *   exclude: ['fs', 'path'],\n   * })\n   * ```\n   */\n  exclude?: ModuleNameWithoutNodePrefix[];\n  /**\n   * Specify whether specific globals should be polyfilled.\n   *\n   * @example\n   *\n   * ```ts\n   * nodePolyfills({\n   *   globals: {\n   *     Buffer: false,\n   *     global: true,\n   *     process: 'build',\n   *   },\n   * })\n   * ```\n   */\n  globals?: {\n    Buffer?: BooleanOrBuildTarget;\n    global?: BooleanOrBuildTarget;\n    process?: BooleanOrBuildTarget;\n  };\n  /**\n   * @default true\n   */\n  protocolImports?: boolean;\n};\n\nexport type PolyfillOptionsResolved = {\n  include: ModuleNameWithoutNodePrefix[];\n  exclude: ModuleNameWithoutNodePrefix[];\n  globals: {\n    Buffer: BooleanOrBuildTarget;\n    global: BooleanOrBuildTarget;\n    process: BooleanOrBuildTarget;\n  };\n  protocolImports: boolean;\n};\n\nconst globals = [\"buffer\", \"global\", \"process\"].flatMap((name) => [name, `node:${name}`]);\n\nconst isBuildEnabled = (value: BooleanOrBuildTarget) => {\n  if (!value) {\n    return false;\n  }\n  if (value === true) {\n    return true;\n  }\n\n  return value === \"build\";\n};\n\nconst isDevEnabled = (value: BooleanOrBuildTarget) => {\n  if (!value) {\n    return false;\n  }\n  if (value === true) {\n    return true;\n  }\n\n  return value === \"dev\";\n};\n\nconst isProtocolImport = (name: string) => {\n  return name.startsWith(\"node:\");\n};\n\n/**\n * Returns a Vite plugin to polyfill Node's Core Modules for browser environments. Supports `node:` protocol imports.\n *\n * @example\n *\n * ```ts\n * // vite.config.ts\n * import { defineConfig } from 'vite'\n * import { nodePolyfills } from 'vite-plugin-node-polyfills'\n *\n * export default defineConfig({\n *   plugins: [\n *     nodePolyfills({\n *       // Specific modules that should not be polyfilled.\n *       exclude: [],\n *       // Whether to polyfill specific globals.\n *       globals: {\n *         Buffer: true, // can also be 'build', 'dev', or false\n *         global: true,\n *         process: true,\n *       },\n *       // Whether to polyfill `node:` protocol imports.\n *       protocolImports: true,\n *     }),\n *   ],\n * })\n * ```\n */\nexport const nodePolyfills = (options: PolyfillOptions = {}): Plugin => {\n  const require = createRequire(import.meta.url);\n  const globalShimsPath = require.resolve(\"vite-plugin-node-polyfills/shims\");\n  const optionsResolved: PolyfillOptionsResolved = {\n    include: [],\n    exclude: [],\n    protocolImports: true,\n    ...options,\n    globals: {\n      Buffer: true,\n      global: true,\n      process: true,\n      ...options.globals,\n    },\n  };\n\n  const isExcluded = (name: string) => {\n    return optionsResolved.exclude.some((excludedName) => {\n      return name === excludedName || name === `node:${excludedName}`;\n    });\n  };\n\n  const isIncluded = (name: string) => {\n    return optionsResolved.include.some((excludedName) => {\n      return name === excludedName || name === `node:${excludedName}`;\n    });\n  };\n\n  return {\n    name: \"vite-plugin-node-polyfills\",\n    config: (_config, env) => {\n      const isDev = env.mode === \"development\";\n      const polyfills = (Object.entries(stdLibBrowser) as Array<[ModuleName, string]>).reduce<\n        Record<ModuleName, string>\n      >((included, [name, value]) => {\n        if (!optionsResolved.protocolImports) {\n          if (isProtocolImport(name)) {\n            return included;\n          }\n        }\n\n        if (optionsResolved.include.length ? isIncluded(name) : !isExcluded(name)) {\n          included[name] = globals.includes(name) ? globalShimsPath : value;\n        }\n\n        return included;\n      }, {} as Record<ModuleName, string>);\n\n      return {\n        build: {\n          rollupOptions: {\n            onwarn: (warning, rollupWarn) => {\n              handleCircularDependancyWarning(warning, rollupWarn);\n            },\n            plugins: [\n              {\n                ...inject({\n                  // https://github.com/niksy/node-stdlib-browser/blob/3e7cd7f3d115ac5c4593b550e7d8c4a82a0d4ac4/README.md#vite\n                  ...(isBuildEnabled(optionsResolved.globals.Buffer) ? { Buffer: [globalShimsPath, \"Buffer\"] } : {}),\n                  ...(isBuildEnabled(optionsResolved.globals.global) ? { global: [globalShimsPath, \"global\"] } : {}),\n                  ...(isBuildEnabled(optionsResolved.globals.process) ? { process: [globalShimsPath, \"process\"] } : {}),\n                }),\n              },\n            ],\n          },\n        },\n        esbuild: {\n          // In dev, the global polyfills need to be injected as a banner in order for isolated scripts (such as Vue SFCs) to have access to them.\n          banner: [\n            isDev && isDevEnabled(optionsResolved.globals.Buffer)\n              ? `import { Buffer as BufferPolyfill } from '${globalShimsPath}'\\nglobalThis.Buffer = BufferPolyfill`\n              : \"\",\n            isDev && isDevEnabled(optionsResolved.globals.global)\n              ? `import { global as globalPolyfill } from '${globalShimsPath}'\\nglobalThis.global = globalPolyfill`\n              : \"\",\n            isDev && isDevEnabled(optionsResolved.globals.process)\n              ? `import { process as processPolyfill } from '${globalShimsPath}'\\nglobalThis.process = processPolyfill`\n              : \"\",\n          ].join(\"\\n\"),\n        },\n        optimizeDeps: {\n          esbuildOptions: {\n            // https://github.com/niksy/node-stdlib-browser/blob/3e7cd7f3d115ac5c4593b550e7d8c4a82a0d4ac4/README.md?plain=1#L203-L209\n            define: {\n              ...(isDevEnabled(optionsResolved.globals.Buffer) ? { Buffer: \"Buffer\" } : {}),\n              ...(isDevEnabled(optionsResolved.globals.global) ? { global: \"global\" } : {}),\n              ...(isDevEnabled(optionsResolved.globals.process) ? { process: \"process\" } : {}),\n            },\n            inject: [globalShimsPath],\n            plugins: [\n              esbuildPlugin(polyfills),\n              // Supress the 'injected path \"...\" cannot be marked as external' error in Vite 4 (emitted by esbuild).\n              // https://github.com/evanw/esbuild/blob/edede3c49ad6adddc6ea5b3c78c6ea7507e03020/internal/bundler/bundler.go#L1469\n              {\n                name: \"vite-plugin-node-polyfills-shims-resolver\",\n                setup(build) {\n                  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping\n                  const escapedGlobalShimsPath = globalShimsPath.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n                  const globalShimsFilter = new RegExp(`^${escapedGlobalShimsPath}$`);\n\n                  // https://esbuild.github.io/plugins/#on-resolve\n                  build.onResolve({ filter: globalShimsFilter }, () => {\n                    return {\n                      // https://github.com/evanw/esbuild/blob/edede3c49ad6adddc6ea5b3c78c6ea7507e03020/internal/bundler/bundler.go#L1468\n                      external: false,\n                      path: globalShimsPath,\n                    };\n                  });\n                },\n              },\n            ],\n          },\n        },\n        resolve: {\n          // https://github.com/niksy/node-stdlib-browser/blob/3e7cd7f3d115ac5c4593b550e7d8c4a82a0d4ac4/README.md?plain=1#L150\n          alias: {\n            ...polyfills,\n          },\n        },\n      };\n    },\n  } as Plugin;\n};\n"],"names":["globals","name","isBuildEnabled","value","isDevEnabled","isProtocolImport","nodePolyfills","options","globalShimsPath","createRequire","optionsResolved","isExcluded","excludedName","isIncluded","_config","env","isDev","polyfills","stdLibBrowser","included","warning","rollupWarn","handleCircularDependancyWarning","inject","esbuildPlugin","build","escapedGlobalShimsPath","globalShimsFilter"],"mappings":"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"}